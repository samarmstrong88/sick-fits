{"version":3,"file":"static/webpack/static\\development\\pages\\item.js.6e96bb66e9e73b135414.hot-update.js","sources":["webpack:///./components/DeleteItem.js","webpack:///./components/Item.js","webpack:///./components/Items.js","webpack:///./components/styles/ItemStyles.js","webpack:///./components/styles/PriceTag.js","webpack:///./components/styles/Title.js","webpack:///./pages/item.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport { ALL_ITEMS_QUERY } from \"./Items\";\r\nimport Link from \"next/link\";\r\n\r\nconst DELETE_ITEM_MUTATION = gql`\r\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\r\n    deleteItem(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class DeleteItem extends Component {\r\n  deleteItem = (e, deleteItemMutation) => {\r\n    e.preventDefault();\r\n    if (window.confirm(\"Are you sure you want to delete this item?\")) {\r\n      const res = deleteItemMutation({\r\n        variables: {\r\n          id: this.props.id\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  update = (cache, payload) => {\r\n    // console.log(cache, payload);\r\n\r\n    //read cache data\r\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\r\n    //compare to deleted id\r\n    console.log(data);\r\n    data.items = data.items.filter(\r\n      item => item.id !== payload.data.deleteItem.id\r\n    );\r\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\r\n\r\n    // console.log(update_data);\r\n    cache.write;\r\n    // remove the deleted file from cache\r\n    //push data to cache\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // <div>test</div>\r\n      <Mutation\r\n        mutation={DELETE_ITEM_MUTATION}\r\n        variables={{ id: this.props.id }}\r\n        update={this.update}\r\n      >\r\n        {(deleteItem, { data, loading }) => {\r\n          // if (loading) return <p>Loading...</p>;\r\n          return (\r\n            // <div onClick={e => console.log(e)}>div</div>\r\n            <button onClick={e => this.deleteItem(e, deleteItem)}>\r\n              Delete\r\n            </button>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport Title from \"./styles/Title\";\r\nimport ItemStyles from \"./styles/ItemStyles\";\r\nimport PriceTag from \"./styles/PriceTag\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport DeleteItem from \"./DeleteItem\";\r\n\r\nexport default class Item extends Component {\r\n  static propTypes = {\r\n    item: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { item } = this.props;\r\n    // if (item.length < 1) return <p>No item found</p>;\r\n    return (\r\n      <ItemStyles>\r\n        {item.image && <img src={item.image} alt={item.title} />}\r\n        <Link href={{ pathname: \"/item\", query: { id: item.id } }}>\r\n          <a>\r\n            <Title>{item.title}</Title>\r\n          </a>\r\n        </Link>\r\n        <PriceTag>{formatMoney(item.price)}</PriceTag>\r\n        <p>{item.description}</p>\r\n        <div className=\"buttonList\">\r\n          <Link href={{ pathname: \"/update\", query: { id: item.id } }}>\r\n            <button>Edit</button>\r\n          </Link>\r\n          <button>Add To Cart</button>\r\n          <DeleteItem id={this.props.item.id}>Delete</DeleteItem>\r\n        </div>\r\n      </ItemStyles>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Item from \"./Item\";\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY {\r\n    items {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap:60px;\r\n  max-width: {props.theme.maxWidth};\r\n`;\r\n\r\nclass Items extends Component {\r\n  render() {\r\n    return (\r\n      <Center>\r\n        <p>Look at this dope stuff for sale</p>\r\n        <Query query={ALL_ITEMS_QUERY}>\r\n          {({ data, error, loading }) => {\r\n            if (error) return <p>Error: {error.message}</p>;\r\n            if (loading) return <p>Loading...</p>;\r\n\r\n            return (\r\n              <ItemsList>\r\n                {data.items.map(item => (\r\n                  <Item item={item} key={item.id} />\r\n                ))}\r\n              </ItemsList>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\nexport { ALL_ITEMS_QUERY };\r\n","import styled from \"styled-components\";\r\n\r\nconst Item = styled.div`\r\n  background: white;\r\n  border: 1px solid ${props => props.theme.offWhite};\r\n  box-shadow: ${props => props.theme.bs};\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 400px;\r\n    object-fit: cover;\r\n  }\r\n  p {\r\n    font-size: 12px;\r\n    line-height: 2;\r\n    font-weight: 300;\r\n    flex-grow: 1;\r\n    padding: 0 3rem;\r\n    font-size: 1.5rem;\r\n  }\r\n  .buttonList {\r\n    display: grid;\r\n    width: 100%;\r\n    border-top: 1px solid ${props => props.theme.lightgrey};\r\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n    grid-gap: 1px;\r\n    background: ${props => props.theme.lightgrey};\r\n    & > * {\r\n      background: white;\r\n      border: 0;\r\n      font-size: 1rem;\r\n      padding: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Item;\r\n","import styled from 'styled-components';\r\n\r\nconst PriceTag = styled.span`\r\n  background: ${props => props.theme.red};\r\n  transform: rotate(3deg);\r\n  color: white;\r\n  font-weight: 600;\r\n  padding: 5px;\r\n  line-height: 1;\r\n  font-size: 3rem;\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: -3px;\r\n  right: -3px;\r\n`;\r\n\r\nexport default PriceTag;\r\n","import styled from 'styled-components';\r\n\r\nconst Title = styled.h3`\r\n  margin: 0 1rem;\r\n  text-align: center;\r\n  transform: skew(-5deg) rotate(-1deg);\r\n  margin-top: -3rem;\r\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\r\n  a {\r\n    background: ${props => props.theme.red};\r\n    display: inline;\r\n    line-height: 1.3;\r\n    font-size: 4rem;\r\n    text-align: center;\r\n    color: white;\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Item from \"../components/Item\";\r\n// import SINGLE_ITEM_QUERY from \"../components/UpdateItem\";\r\n\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    item(where: { id: $id }) {\r\n      id\r\n      title\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nclass item extends Component {\r\n  render() {\r\n    return (\r\n      < Query query={SINGLE_ITEM_QUERY} variables={{ id: this.props.query.id }}>{\r\n        ({ data, loading, error }) => {\r\n          if (loading) return <div>Loading...</div>\r\n          if (error) return <Error error={error} />\r\n          console.log(data);\r\n          return <Item item={item} />\r\n        }\r\n      }\r\n      </Query >\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\n// const item = () => {\r\n//   return <p>item</p>\r\n// }\r\n\r\nexport default item;\r\n"],"mappings":"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","sourceRoot":""}